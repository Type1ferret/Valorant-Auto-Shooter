from tkinter import ttk
from PIL import ImageGrab
import tkinter as tk
import customtkinter
import pyautogui
import threading
import time
import numpy as np
from webcolors import rgb_to_name
import numpy as np
import pygetwindow as gw

#Defining Purple AKA the biggest pain in the rectum for this project
def get_limits(color, tolerance=20):
    lower = np.array([color[0] - tolerance, 100, 100])
    upper = np.array([color[0] + tolerance, 255, 255])
    return lower, upper
yellow = np.array([200, 40, 230])
lowerLimit, upperLimit = get_limits(yellow, tolerance=30)
def get_screen_color():
    screen_width, screen_height = pyautogui.size()
    center_x = screen_width // 2
    center_y = screen_height // 2
    screenshot = ImageGrab.grab(bbox=(center_x - 1, center_y - 1, center_x + 1, center_y + 1))
    color = np.array(screenshot.getpixel((0, 0)))
    return color
def is_yellow(color):
    return np.all(color >= lowerLimit) and np.all(color <= upperLimit)
def monitor_color():
    global running
    while running:
        center_color = get_screen_color()
        print("Color:", center_color)
        if is_yellow(center_color):
            pyautogui.hotkey('k')
# Start the script
running = True
monitor_color()
# Start the script
running = True
monitor_color()

#Code monitoring for button status
def start_monitoring():
    global running
    running = True
    color_thread = threading.Thread(target=monitor_color)
    color_thread.daemon = True
    color_thread.start()
def stop_monitoring():
    global running
    running = False

#Starting the program as False
running = False
